class Solution {
    public int maximumLength(String s) {
        HashMap<String, Integer> map = new HashMap<>();
        int n = s.length();
        for (int i = 0; i < n; i++) {
            StringBuilder sb = new StringBuilder();
            for (int j = i; j < n; j++) {
                if (sb.length() == 0 || s.charAt(j) == sb.charAt(sb.length() - 1)) {
                    sb.append(s.charAt(j));
                    String str = sb.toString();
                    map.put(str, map.getOrDefault(str, 0) + 1);
                } else {
                    break;
                }
            }
        }

        int maxlength = -1;

        for (String key : map.keySet()) {
            int freq = map.get(key);
            if (freq >= 3) {
                maxlength = Math.max(maxlength, key.length());
            }
        }
        return maxlength;
    }
}
