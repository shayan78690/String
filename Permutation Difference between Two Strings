class Solution {
    public int findPermutationDifference(String s, String t) {
        int sum = 0;
        for(int i = 0; i < s.length(); i++) {
            for(int j = 0; j < t.length(); j++) {
                if(s.charAt(i) == t.charAt(j)) {
                    int diff = Math.abs(i-j);
                    sum += diff;
                    break;
                }
            }
            
        }
        return sum;
    }
}















import java.util.HashMap;

class Solution {
    public int findPermutationDifference(String s, String t) {
        HashMap<Character, Integer> tIndices = new HashMap<>();
        
        // Store indices of characters in t
        for (int i = 0; i < t.length(); i++) {
            tIndices.put(t.charAt(i), i);
        }

        int sum = 0;
        
        // Calculate index difference using t's indices
        for (int i = 0; i < s.length(); i++) {
            if (tIndices.containsKey(s.charAt(i))) {
                int diff = Math.abs(i - tIndices.get(s.charAt(i)));
                sum += diff;
            }
        }

        return sum;
    }
}
